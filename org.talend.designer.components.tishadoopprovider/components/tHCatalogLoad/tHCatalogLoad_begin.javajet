<%@ jet
	imports="
	java.util.List
	java.util.Map
	org.talend.core.model.process.ElementParameterParser	
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
	
	String templeton_host = ElementParameterParser.getValue(node, "__TEMPLETON_HOST__");
	String templeton_port = ElementParameterParser.getValue(node, "__TEMPLETON_PORT__");
	
	String database = ElementParameterParser.getValue(node, "__DATABASE_NAME__");
	String table = ElementParameterParser.getValue(node, "__TABLE_NAME__");
	String partition = ElementParameterParser.getValue(node, "__PARTITION_NAME__");
	String username = ElementParameterParser.getValue(node, "__USERNAME__");
	String fileLocation = ElementParameterParser.getValue(node, "__FILE_LOCATION__");
	
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
	boolean activateLog = "true".equals(ElementParameterParser.getValue(node, "__ACTIVATE_LOG__"));
	
	String stdout = ElementParameterParser.getValue(node, "__STDOUT__");
	String stderr = ElementParameterParser.getValue(node, "__STDERR__");
	
	
	
%>
	<%@ include file="../templates/HCatalog/RestResponse.javajet"%>
	try {
<%
		ParseRestResult parserResult = new ParseRestResult();
		parserResult.declareVariable(node);
%>
		jsonRow_<%=cid%>.put("location", <%=fileLocation%>);
		org.apache.cxf.jaxrs.client.WebClient client_<%=cid%> = org.apache.cxf.jaxrs.client.WebClient.create("http://" + <%=templeton_host%> + ":" + <%=templeton_port%> + "?user.name=" + <%=username%>);
		client_<%=cid%>.path("templeton/v1/ddl/database/" + <%=database%> + "/table/" + <%=table%> + "/partition/" + <%=partition%>);
		client_<%=cid%>.type("application/json").accept("application/json");
		
		javax.ws.rs.core.Response response_<%=cid%> = client_<%=cid%>.put(jsonRow_<%=cid%>.toJSONString());
		
<%
			parserResult.getJSONObject(node, null);
			parserResult.manageError(node, activateLog);
			parserResult.manageResponseStatus(node, null);
%>		
		
	} catch (Exception e_<%=cid%>) {
<%
		if(dieOnError) {
%>
			throw e_<%=cid%>;
<%
		} else {
%>
			System.err.println(e_<%=cid%>.getMessage());
<%
		}
%>
	}