<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		java.util.List
        java.util.Map
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	boolean overwrite = ("true").equals(ElementParameterParser.getValue(node, "__OVERWRITE__"));
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
%>
		globalMap.put("<%=cid %>_CURRENT_STATUS", "No file renamed.");	      				
   		java.util.Set<String> keySet_<%=cid %> = map_<%=cid %>.keySet();
   		String tmp_<%=cid%> = pid + System.currentTimeMillis();
      	for (String key_<%=cid %> : keySet_<%=cid %>){
			String fromFile_<%=cid %> = (<%=remotedir%> + "/" + key_<%=cid %>).replaceAll("\\\\","/"); 
    		String toFile_<%=cid%> = (<%=remotedir%> + "/" + map_<%=cid %>.get(key_<%=cid %>)).replaceAll("\\\\","/");
    		if (!fromFile_<%=cid%>.equals(toFile_<%=cid%>)){
    			org.apache.hadoop.fs.Path fromPath_<%=cid%> = new org.apache.hadoop.fs.Path(fromFile_<%=cid%>);
    			org.apache.hadoop.fs.Path toPath_<%=cid%> = new org.apache.hadoop.fs.Path(toFile_<%=cid%>);
    			try {
	    			if(fs_<%=cid%>.exists(fromPath_<%=cid%>)) {
			    		if(!fs_<%=cid%>.exists(toPath_<%=cid%>)) {
			    			boolean success_<%=cid%> = fs_<%=cid%>.rename(fromPath_<%=cid%>,toPath_<%=cid%>);
			    			if(success_<%=cid%>) {
			    				globalMap.put("<%=cid %>_CURRENT_STATUS", "File rename OK.");
			    				nb_file_<%=cid%>++;
			    			} else {
			    				globalMap.put("<%=cid %>_CURRENT_STATUS", "File rename fail.");
			    			}
			    		}
			    		<%if(overwrite){%>
			    		else {
			    			String tempFile_<%=cid%> = toFile_<%=cid%> + "." + tmp_<%=cid%>;
			    			org.apache.hadoop.fs.Path tempPath_<%=cid%> = new org.apache.hadoop.fs.Path(tempFile_<%=cid%>);
			    			boolean success_<%=cid%> = true;
		     		    	if(fs_<%=cid%>.exists(tempPath_<%=cid%>)){
		     		    		fs_<%=cid%>.delete(tempPath_<%=cid%>);
		     		    	}
		     		    	
			     			success_<%=cid%> = success_<%=cid%> && fs_<%=cid %>.rename(toPath_<%=cid%>, tempPath_<%=cid%>);
			     			success_<%=cid%> = success_<%=cid%> && fs_<%=cid %>.rename(fromPath_<%=cid%>, toPath_<%=cid%>);
			     			
			     			fs_<%=cid%>.delete(tempPath_<%=cid%>);
			     			
			     			if(success_<%=cid%>) {
			    				globalMap.put("<%=cid %>_CURRENT_STATUS", "File rename OK.");
			    				nb_file_<%=cid%>++;
			    			} else {
			    				globalMap.put("<%=cid %>_CURRENT_STATUS", "File rename fail.");
			    			}
			    		}
			    		<%}%>
		    		}
	    		} catch(java.io.IOException e) {
	    			globalMap.put("<%=cid %>_CURRENT_STATUS", "File rename fail.");
            		<%if(("true").equals(dieOnError)){%>
					throw(e);
					<%}else{%>
					System.err.print(e.getMessage());
					<%}%>	    		
	    		}
    		}
	    }
