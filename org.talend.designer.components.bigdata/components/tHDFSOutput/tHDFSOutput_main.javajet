<%@ jet 
	imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.EConnectionType
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.ElementParameterParser 
    java.util.List 
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String rowSeparator = ElementParameterParser.getValue(node, "__ROWSEPARATOR__");
	String fieldSeparator = ElementParameterParser.getValue(node, "__FIELDSEPARATOR__");
	boolean customEncoding="true".equals( ElementParameterParser.getValue(node,"__CUSTOM_ENCODING__"));
	String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
	
	boolean compress = "true".equals(ElementParameterParser.getValue(node, "__COMPRESS__"));
	String compression = ElementParameterParser.getValue(node, "__COMPRESSION__");
	
	List<? extends IConnection> inConns = node.getIncomingConnections(EConnectionType.FLOW_MAIN);
	IConnection inConn = null;
	IMetadataTable metadata = null;
	
	if(inConns!=null && inConns.size()> 0) {
		inConn = inConns.get(0);
		metadata = inConn.getMetadataTable();
	}
	
	if (metadata!=null) {    
		List< ? extends IConnection> conns = node.getIncomingConnections();
		for (IConnection conn : conns) {
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				List<IMetadataColumn> columnList = metadata.getListColumns();
				int sizeColumns = columnList.size();
%>
				StringBuilder sb_<%=cid %> = new StringBuilder();
<%
				for (int i = 0; i < sizeColumns; i++) {
					IMetadataColumn column = columnList.get(i);
					JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
%>
					sb_<%=cid %>.append(
<%
										String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
										if (javaType == JavaTypesManager.DATE && pattern != null && pattern.trim().length() != 0) {
%>
											FormatterUtils.format_Date(<%=conn.getName() %>.<%=column.getLabel() %>, <%= pattern %>)
<%	
										} else if(javaType == JavaTypesManager.BIGDECIMAL){
%>
											<%=column.getPrecision() == null? conn.getName() + "." + column.getLabel() : conn.getName() + "." + column.getLabel() + ".setScale(" + column.getPrecision() + ", java.math.RoundingMode.HALF_UP)" %>.toPlainString()
<%
										} else if(javaType == JavaTypesManager.BYTE_ARRAY){
%>
											java.nio.charset.Charset.forName(<%=(customEncoding?encoding:"utf8Charset")%>).decode(java.nio.ByteBuffer.wrap(<%=conn.getName() %>.<%=column.getLabel() %>)).toString()
<%
										} else {
%>
											<%=conn.getName() %>.<%=column.getLabel() %>
<%				
										}
%>
										);
<%
										if(i != sizeColumns - 1) {
%>					
					sb_<%=cid %>.append(<%=fieldSeparator%>);
<%
										}
				}
				if(node.isVirtualGenerateNode()){
					String origin = ElementParameterParser.getValue(node, "__DESTINATION__");
					String con_name = org.talend.core.model.utils.NodeUtil.getPrivateConnClassName(conn);
%>
				<%=con_name%>_list_<%=origin%>.add(<%=conn.getName() %>);
<%
				}
%>
				sb_<%=cid %>.append(<%=rowSeparator%>);
<%
				if(!compress) {
%>
				out<%=cid %>.write(sb_<%=cid %>.toString());
<%
				} else {
%>
					out<%=cid%>.write(sb_<%=cid%>.toString().getBytes(<%=customEncoding?encoding:""%>));
<%
				}
			}
		}
	}
%>

	