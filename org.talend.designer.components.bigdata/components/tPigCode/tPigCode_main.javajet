<%@ jet
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String scriptCode = ElementParameterParser.getValue(node,"__SCRIPT_CODE__");
	String [] codes = scriptCode.split("\n");

	String previous_node="";
	String start_node="";
	
	boolean inMain = true;

	if(node.getIncomingConnections()!=null && node.getIncomingConnections().size()>0) {
		previous_node = node.getIncomingConnections().get(0).getSource().getUniqueName();
		INode loadNode = node.getDesignSubjobStartNode();
		start_node = loadNode.getUniqueName();
		inMain = loadNode.isSubtreeStart();
	}

%>

	StringBuilder sb_<%=cid%> = new StringBuilder();
<%
	for(String code : codes) {
		code = code.trim();
		if("true".equals(ElementParameterParser.getValue(node, "__ESCAPE__"))){
			code = code.replace("\\","\\\\").replace("\"","\\\"");
		}
		
		if(inMain) {
%>
		pigServer_<%=start_node%>.registerQuery("<%=code%>");		
<%
		} else {
%>
    	pl_<%=start_node%> = new Object[2];
    	pl_<%=start_node%>[0] = "query";
    	pl_<%=start_node%>[1] = "<%=code%>";
    	pigScript_<%=start_node%>.add(pl_<%=start_node%>);
<%
		}
	}
%>