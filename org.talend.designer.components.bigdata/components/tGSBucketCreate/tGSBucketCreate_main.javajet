<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
    String accessKey = ElementParameterParser.getValue(node, "__ACCESS_KEY__");
	String secretKey = ElementParameterParser.getValue(node, "__SECRET_KEY__");
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	boolean isSpecialConfig=("true").equals(ElementParameterParser.getValue(node,"__SPECIAL_CONFIGUER__"));
	String bucketName=ElementParameterParser.getValue(node,"__BUCKET__");
	String projectID=ElementParameterParser.getValue(node,"__PROJECT_ID__");
	String location = ElementParameterParser.getValue(node,"__LOCATION__");
	String acl = ElementParameterParser.getValue(node,"__ACL__");
	
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
%>
	org.jets3t.service.impl.rest.httpclient.GoogleStorageService service_<%=cid%> = null;
	try {
<%
	if(("true").equals(useExistingConn)) {
		String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
%>
		service_<%=cid%> = (org.jets3t.service.impl.rest.httpclient.GoogleStorageService)globalMap.get("service_<%=connection%>");
<%
	}else{
%>
		org.jets3t.service.security.GSCredentials credentials_<%=cid%> = new org.jets3t.service.security.GSCredentials(<%=accessKey%>,<%=secretKey%>);
	
		service_<%=cid%> = new org.jets3t.service.impl.rest.httpclient.GoogleStorageService(credentials_<%=cid%>);
<%		
	}
%>
		service_<%=cid%>.getAccountOwner();
<%
		if(!isSpecialConfig){
%>
		service_<%=cid%>.createBucket(<%=bucketName%>);
<%
		}else{
%>
		service_<%=cid%>.createBucket(<%=bucketName%>,org.jets3t.service.model.GSBucket.<%=location%>,
			<%if("NONE".endsWith(acl)){%>null<%}else{%>org.jets3t.service.acl.AccessControlList.<%=acl%><%}%>,<%=projectID%>);
<%
		}
%>
	}catch(java.lang.Exception e_<%=cid%>) {
<%
		if (("true").equals(dieOnError)) {
%>
		throw(e_<%=cid%>);
<%
		} else {
%>
		System.err.println(e_<%=cid%>.getMessage());
<%
		}
		if(!("true").equals(useExistingConn)) {
%>
	}finally{
		if(service_<%=cid%> !=null){
			service_<%=cid%>.shutdown();
		}
		
<%
		}
%>
	}
	