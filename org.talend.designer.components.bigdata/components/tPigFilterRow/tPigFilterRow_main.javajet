<%@ jet
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	    	java.util.List
	    	java.util.Map
		"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String previous_node="";
	String start_node="";

	if(node.getIncomingConnections()!=null && node.getIncomingConnections().size()>0) {
		previous_node = node.getIncomingConnections().get(0).getSource().getUniqueName();
		start_node = node.getDesignSubjobStartNode().getUniqueName();
	}
	
	List<Map<String, String>> configs = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILTER_CONFIG__");
	boolean useAdvancedFilter = "true".equals(ElementParameterParser.getValue(node, "__USE_ADVANCED_FILTER__"));
	String advancedFilter = ElementParameterParser.getValue(node, "__ADVANCED_FILTER__");
%>

	StringBuilder sb_<%=cid%> = new StringBuilder();
	sb_<%=cid%>.append("<%=cid%>_RESULT = FILTER <%=previous_node%>_RESULT BY ");
	
<%
	if(!useAdvancedFilter) {
		boolean isFirst = true;
		String operator = "";
		for(Map<String, String> configMap : configs) {
			if(!isFirst) {
%>
				sb_<%=cid%>.append(" <%=configMap.get("LOGICAL")%> ");
<%
			}
			isFirst=false;

			if("EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "==";
			} else if("NEQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "!=";
			} else if("GREATER".equals(configMap.get("OPERATOR"))) {
				operator = ">";
			} else if("GREATER_EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = ">=";
			} else if("LESS".equals(configMap.get("OPERATOR"))) {
				operator = "<";
			} else if("LESS_EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "<=";
			} else if("MATCH".equals(configMap.get("OPERATOR"))) {
				operator = "matches";
			}
%>
			sb_<%=cid%>.append("(<%="true".equals(configMap.get("NOT"))?"NOT ":""%>(<%=configMap.get("COLUMN_NAME")%> <%=operator%> "+<%=configMap.get("VALUE")%>+"))");
<%
		}
	}else {
%>
		sb_<%=cid%>.append(<%=advancedFilter%>);
<%
	}
%>
	sb_<%=cid%>.append(";");
	pigServer_<%=start_node%>.registerQuery(sb_<%=cid%>.toString());
