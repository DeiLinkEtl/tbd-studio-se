<%@ jet 
imports="
	org.talend.core.model.process.INode 
	org.talend.core.model.process.ElementParameterParser 
	org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
	String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	dbquery = dbquery.replaceAll("\n"," ");
	dbquery = dbquery.replaceAll("\r"," ");
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
%>

<%
String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
if(("true").equals(useExistingConn)) {
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "conn_" + connection;
%>
	java.sql.Connection conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
<%
} else {
%>
	java.lang.Class.forName("com.sap.db.jdbc.Driver");
	String dbUser_<%=cid %> = <%=dbuser%>;	
	String dbPwd_<%=cid %> = <%=dbpwd%>;	
	String dbProperties_<%=cid%> = <%=dbproperties%>;
	String url_<%=cid %> = "jdbc:sap://" + <%=dbhost%> + ":" + <%=dbport%>;
	if(dbProperties_<%=cid%> != null && dbProperties_<%=cid%>.trim().length() > 0) {
		url_<%=cid%> = "jdbc:sap://" + <%=dbhost%> + ":" + <%=dbport%> + "/?" + dbProperties_<%=cid%>;
	}
	java.sql.Connection conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);
<%
}
%>

<%
if(!("true").equals(useExistingConn)) {
	if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
		%>
		conn_<%=cid%>.setAutoCommit(false);		
		int commitEvery_<%=cid%> = <%=commitEvery%>;
		int commitCounter_<%=cid%> = 0;
		<%
	}
}
%>

<%
	if (usePrepareStatement ) {
%>
	java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	} else {
%>
	java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";
boolean whetherReject_<%=cid%> = false;
