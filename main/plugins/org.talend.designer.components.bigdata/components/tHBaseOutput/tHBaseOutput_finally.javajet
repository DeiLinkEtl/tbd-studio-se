<%@ jet
	    imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
	    "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
%>
	<%
	//use existing connection
	if(!"true".equals(useExistingConn)){
		String distribution = ElementParameterParser.getValue(node,"__DISTRIBUTION__");
		String hbaseVersion = ElementParameterParser.getValue(node,"__HBASE_VERSION__");
        boolean isHadoop2 = "HADOOP_2".equals(ElementParameterParser.getValue(node, "__HADOOP_CUSTOM_VERSION__"));
		org.talend.core.hadoop.api.components.HBaseComponent hbaseDistrib = null;
		try {
			hbaseDistrib = (org.talend.core.hadoop.api.components.HBaseComponent) org.talend.core.hadoop.api.DistributionFactory.buildDistribution(distribution, hbaseVersion);
		} catch (java.lang.Exception e) {
			e.printStackTrace();
			return "";
		}
		boolean isCustom = hbaseDistrib instanceof org.talend.core.hadoop.api.distribution.CustomDistribution;
		%>
		if(resourceMap.get("finish_<%=cid%>") == null){
			if(resourceMap.get("conn_<%=cid%>")!=null){
				org.apache.hadoop.conf.Configuration conn_<%=cid%> = (org.apache.hadoop.conf.Configuration)resourceMap.get("conn_<%=cid%>");
				<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/HBase/CloseHBaseConnection.javajet"%>
			}
		}
	<%
	}
	%>
