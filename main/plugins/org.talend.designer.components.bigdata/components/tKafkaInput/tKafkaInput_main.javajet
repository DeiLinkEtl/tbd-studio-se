<%@ jet
    imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.HashMap
"
%>

<%@ include file="@{org.talend.designer.components.bigdata}/components/tKafkaInput/tKafkaInput_util.javajet"%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

TKafkaInputUtil tKafkaInputUtil = new TKafkaInputUtil(node);
String outStructName = tKafkaInputUtil.getOutStructName();
%>

kafka.message.MessageAndMetadata<byte[], <%=outStructName%>> <%=cid%>_messageAndMetadata = <%=cid%>_consumerIterator.next();
<%=tKafkaInputUtil.getOutgoingConnectionName()%> = <%=cid%>_messageAndMetadata.message();
<%
if (ElementParameterParser.getBooleanValue(node, "__SAVE_OFFSET__")) {
    %>
    <%=tKafkaInputUtil.getOutgoingConnectionName()%>.offset = <%=cid%>_messageAndMetadata.offset();
    <%
}
%>